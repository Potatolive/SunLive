@model IEnumerable<Sunlive.Entities.FanPost>

@{
    Layout = "~/Views/Shared/_BootstrapLayout.cshtml";
}
@section AdditionalMetaData
{
    <meta http-equiv="refresh" content="60000" />
}

<div id="page-title">

    <h2>Aditya TV </h2>

</div>
<br />
<br />
<div class="pull-right">
    <form class="form-inline" action="~/Home/Search" method="post">

        <div class="form-group">
            <label for="search"></label>
            <input type="text" class="form-control" id="TextContent" name="TextContent" placeholder="Enter a text to search">
        </div>
        <button type="submit" class="btn btn-default">Search</button>
    </form>
</div>

<br />
<br />
<br />





<div id="wrapper">

    <div id="filters">
        <ul class="option-set" data-option-key="filter">
            <li><a href="#filter" class="selected" data-option-value="*">All</a></li>
            <li>/</li>
            <li><a href="#filter" data-option-value=".Delete">New</a></li>
            <li>/</li>
            <li><a href="#filter" data-option-value=".Deleted">Approved</a></li>
            <li>/</li>
            <li><a href="#filter" data-option-value=".Rejected">Rejected</a></li>
        </ul>
    </div>

    <!-- start: Wall -->
    <div id="wall" class="row-fluid">

        @*<div class="span3 item">
            <div class="quotes">
                <div class="quote">
                    “That’s not what we think design is. It’s not just what it looks like and feels like. Design is how it works”
                </div>
                <div class="author">
                    - Steve Jobs -
                </div>
            </div>
        </div>*@

        @foreach (var item in Model)
        {
            if (!string.IsNullOrEmpty(item.ImageURL))
            {
                item.PublishedOn = item.PublishedOn.ToLocalTime();

                 <div class="span3 item @item.Status">
            <div class="picture">
                <div style="margin-bottom: 5px">
                    <span><i class="icon-calendar"></i>@Html.DisplayFor(modelItem => item.PublishedOn)</span>
                    <span class="pull-right"><i class="icon-user"></i> <a href="#">@Html.Raw(item.PublishedBy.Split(' ')[0])</a></span>
                </div>
                <div class="image" onmouseover="javascript:cropImage('@item._id'); return true;">
                    <img id="img_@item._id" class="imgforapproval" src="@item.ImageURL" alt="" />
                </div>
                
                
                <div class="meta">

                    <form id="form_crop_image_@item._id">
                        <input hidden id="crop_image_id_@item._id" name="ImgId" value="@item._id" />
                        <input hidden id="X_@item._id" name="X" />
                        <input hidden id="Y_@item._id" name="Y" />
                        <input hidden id="W_@item._id" name="W" />
                        <input hidden id="H_@item._id" name="H" />
                        <input hidden id="imageWidth_@item._id" name="imageWidth" value="0" />
                        <input hidden id="imageHeight_@item._id" name="imageHeight" value="0" />

                        <button imaageId="@item._id" type="button" class="btn btn-warning btn-xs pull-right cropButton">
                            <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span> Crop
                        </button>
                        <button imaageid="@item._id" type="button" class="btn btn-warning btn-xs pull-right hidden revertButton">
                            <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Revert
                        </button>
                    </form>

                   
                    <div class="clearfix"></div>
                </div>
                <div class="description">
                    <p>
                        @if (item.TextContent.Length > 140)
                        {
                            @Html.Raw(item.TextContent.Substring(0, 140) + " ...")
                        }
                        else
                        {
                            @Html.Raw(item.TextContent)
                        }
                    </p>
                </div>
                <div class="meta">
                    <div class="pull-right">
                        <button type="button" class="btn btn-danger btn-xs ">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Reject
                        </button>
                        <button type="button" class="btn btn-success btn-xs ">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Approve
                        </button>
                    </div>
                    <div class="clearfix"></div>
                </div>

                
            </div>
        </div>
            
                
            }
        }
       


    </div>
    <!-- end: Wall -->

</div>


