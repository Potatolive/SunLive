@model Sunlive.Entities.FanPost

@{
    Layout = null;
    var item = Model;

    item.ImageURL = item.ImageURL.Replace("normal.", "400x400.");

    if (string.IsNullOrEmpty(item.Source)) {
        item.Source = "Facebook";
    }

}
            @if (!string.IsNullOrEmpty(item.ImageURL))
            {
                //item.PublishedOn = item.PublishedOn;
                string newImgUrl = item.ImageURL;

                //Ignoring croppedImage for New Case
                if (!string.IsNullOrEmpty(item.CroppedImageURL) && item.Status != "New")
                {
                    newImgUrl = item.CroppedImageURL;
                }

<div id="item_@item._id" class="span3 item @item.Status grid-item">
    <p class="number "></p>
    <div class="picture">
        <div style="height: 50px; margin-bottom: 5px">
            <span><img src="@item.PublishedByUrl" alt="" class="profilepicture"/></span>
            <div style="margin-left: 5px;">
                <div><i class="icon-user"></i> <a href="#">@item.PublishedBy</a></div>
                <div><i class="icon-calendar"></i>@Html.DisplayFor(modelItem => item.PublishedOn)</div>
                <div>@item.Source</div>
            </div>
        </div>


        <div class="image @item.Status" imageId ="@item._id">
            <img id="img_@item._id" class="imgforapproval " src="@newImgUrl" alt="" />
        </div>


        <div class="meta" style="min-height: 20px">

            @if (item.Status == "New") { 
            <form id="form_crop_image_@item._id">
                <input hidden id="crop_image_id_@item._id" name="ImgId" value="@item._id" />
                <input hidden id="X_@item._id" name="X" />
                <input hidden id="Y_@item._id" name="Y" />
                <input hidden id="W_@item._id" name="W" />
                <input hidden id="H_@item._id" name="H" />
                <input hidden id="imageWidth_@item._id" name="imageWidth" value="0" />
                <input hidden id="imageHeight_@item._id" name="imageHeight" value="0" />
                <input hidden id="pageName_@item._id" name="pageName" value="@ViewBag.PageName" />
                <span>450 x 1300 pixels</span>
                    <button id="crop_@item._id" data-pagename="@ViewBag.PageName" data-imageid="@item._id" type="button" class="btn btn-warning btn-xs pull-right hidden cropButton">
                        <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span> Crop
                    </button>
                <button id="revert_@item._id" data-imageid="@item._id" data-pagename="@ViewBag.PageName"  type="button" class="btn btn-warning btn-xs pull-right hidden revertButton">
                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Revert
                </button>
             
            </form>
            }


            <div class="clearfix"></div>
        </div>
        <div class="description">
            <p>
                @if (!string.IsNullOrWhiteSpace(item.TextContent) && item.TextContent.Length > 140)
                {
                    @Html.Raw(item.TextContent.Substring(0, 140) + " ...")
                }
                else
                {
                    @Html.Raw(item.TextContent)
                }
            </p>
        </div>
        <div class="meta">
            <div class="pull-right">
                @if (item.Status == "New")
                {

                    <button type="button" class="btn btn-danger btn-xs rejectButton" data-pagename="@ViewBag.PageName" data-imageid="@item._id">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Reject
                    </button>
                    <button type="button" class="btn btn-success btn-xs approveButton" data-pagename="@ViewBag.PageName"  data-imageid="@item._id">
                        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Approve
                    </button>
    <button type="button" class="btn btn-warning btn-xs prioritizeButton" data-pagename="@ViewBag.PageName"  data-imageid="@item._id">
        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Prioritize
    </button>
                }

                @{
                    var deleteButtonStatus = (item.Status == "Approved" || item.Status == "Downloaded") ? string.Empty :"hidden"  ;
                }

                <button type="button" class="btn btn-danger btn-xs deleteButton @deleteButtonStatus" data-pagename="@ViewBag.PageName"  data-imageid="@item._id" >
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete
                </button>

            </div>
            <div class="clearfix"></div>
            </div>
    </div>
</div>


            }